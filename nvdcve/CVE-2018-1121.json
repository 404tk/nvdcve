{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2018-1121",
      "ASSIGNER": "cve@mitre.org"
    },
    "affects": {
      "vendor": {
        "vendor_data": [

        ]
      }
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [

          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "http://seclists.org/oss-sec/2018/q2/122",
          "name": "[oss-security] 20180517 Qualys Security Advisory - Procps-ng Audit Report",
          "refsource": "MLIST"
        },
        {
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1121",
          "name": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1121",
          "refsource": "CONFIRM"
        },
        {
          "url": "https://www.qualys.com/2018/05/17/procps-ng-audit-report-advisory.txt",
          "name": "https://www.qualys.com/2018/05/17/procps-ng-audit-report-advisory.txt",
          "refsource": "MISC"
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "procps-ng, procps is vulnerable to a process hiding through race condition. Since the kernel's proc_pid_readdir() returns PID entries in ascending numeric order, a process occupying a high PID can use inotify events to determine when the process list is being scanned, and fork/exec to obtain a lower PID, thus avoiding enumeration. An unprivileged attacker can hide a process from procps-ng's utilities by exploiting a race condition in reading /proc/PID entries. This vulnerability affects procps and procps-ng up to version 3.3.15, newer versions might be affected also."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": [

    ]
  },
  "impact": {
  },
  "publishedDate": "2018-06-13T20:29Z",
  "lastModifiedDate": "2018-06-13T20:29Z"
}